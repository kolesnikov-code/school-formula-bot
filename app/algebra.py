from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
import app.keyboards as kb

# –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∞–ª–≥–µ–±—Ä—ã

algebra_router = Router()


# –ï–¥–∏–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
algebra_base = {
    'percentages': ('–ü—Ä–æ—Ü–µ–Ω—Ç—ã', kb.algebra_base),
    'proportions': ('–ü—Ä–æ–ø–æ—Ä—Ü–∏–∏', kb.algebra_base),
    'equations': ('–£—Ä–∞–≤–Ω–µ–Ω–∏—è', kb.algebra_base),
    'coordinates': ('–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã', kb.algebra_base),
    'exponentiation': ('–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å', kb.algebra_base),
    'roots': ('–ö–æ—Ä–µ–Ω—å –∏–∑ —á–∏—Å–ª–∞', kb.algebra_base),
    'number_sequence': ('–ß–∏—Å–ª–æ–≤–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', kb.algebra_base),
    'number_progression': ('–ß–∏—Å–ª–æ–≤–∞—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—è', kb.algebra_base)
}


@algebra_router.callback_query(F.data.in_(algebra_base.keys()))
async def handle_subject(callback: CallbackQuery):
    subject_name, keyboard = algebra_base[callback.data]

    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.answer(subject_name)
    await callback.message.answer(
        f'{subject_name}. –ß—Ç–æ–±—ã –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—É—é —Ç–µ–º—É, –ø–æ—Å–º–æ—Ç—Ä–∏ —Ä–∞–∑–¥–µ–ª –≤ —É—á–µ–±–Ω–∏–∫–µ.',
        reply_markup=keyboard
    )


# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–µ–º
# topic_names = {
#     'percentages': '–ü—Ä–æ—Ü–µ–Ω—Ç—ã',
#     'proportions': '–ü—Ä–æ–ø–æ—Ä—Ü–∏–∏',
#     'equations': '–£—Ä–∞–≤–Ω–µ–Ω–∏—è',
#     'coordinates': '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã',
#     'exponentiation': '–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å',
#     'roots': '–ö–æ—Ä–µ–Ω—å –∏–∑ —á–∏—Å–ª–∞',
#     'number_sequence': '–ß–∏—Å–ª–æ–≤–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
#     'number_progression': '–ß–∏—Å–ª–æ–≤–∞—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—è'
# }

# –§–£–ù–ö–¶–ò–Ø –í–´–ë–û–†–ê –¢–ï–ú–´ –ü–û–°–õ–ï –ü–ï–†–ï–•–û–î–ê –í –†–ê–ó–î–ï–õ
#
# @algebra_router.callback_query(F.data.in_(topic_names.keys()))
# async def handle_algebra_topics(callback: CallbackQuery):
#     topic_key = callback.data
#     topic_name = topic_names[topic_key]
#
#     # –£–¥–∞–ª—è–µ–º –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
#     await callback.message.edit_reply_markup(reply_markup=None)
#
#     await callback.answer(f"–¢–µ–º–∞: {topic_name}")
#
#     # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã
#     if topic_key == 'percentages':
#         await callback.message.answer(
#             f"üìä {topic_name}. –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ %, –æ—Å–Ω–æ–≤–Ω–æ–µ —á–∏—Å–ª–æ':\n"
#             "‚Ä¢ –ù–∞–π—Ç–∏ X% –æ—Ç Y\n"
#             "‚Ä¢ –°–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç X –æ—Ç Y\n"
#             "‚Ä¢ –£–≤–µ–ª–∏—á–∏—Ç—å/—É–º–µ–Ω—å—à–∏—Ç—å X –Ω–∞ Y%\n\n"
#             "–ü—Ä–∏–º–µ—Ä: '–ù–∞–π—Ç–∏ 15% –æ—Ç 200'"
#         )
#     elif topic_key == 'equations':
#         await callback.message.answer(
#             f"üìù {topic_name}. –í–≤–µ–¥–∏—Ç–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ:\n"
#             "‚Ä¢ –õ–∏–Ω–µ–π–Ω–æ–µ: 2x + 5 = 15\n"
#             "‚Ä¢ –ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ: x¬≤ - 5x + 6 = 0\n"
#             "‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —É—Ä–∞–≤–Ω–µ–Ω–∏–π: 2x + y = 7, x - y = 1"
#         )
#     else:
#         await callback.message.answer(
#             f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–µ–º—É: {topic_name}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π..."
#         )


# –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
@algebra_router.message(F.text)
async def handle_algebra_input(message: Message):
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞–Ω–Ω—ã—Ö
    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã –±—É–¥–µ–º –ø—Ä–∏–º–µ–Ω—è—Ç—å —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º—É–ª—ã
    text = message.text.lower()

    # –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
    if '–ø—Ä–æ—Ü–µ–Ω—Ç' in text or '%' in text:
        await message.answer("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º...")
        # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
        # result = calculate_percentages(text)
        # await message.answer(result)
    elif '—É—Ä–∞–≤–Ω–µ–Ω–∏–µ' in text or '=' in text:
        await message.answer("–†–µ—à–∞—é —É—Ä–∞–≤–Ω–µ–Ω–∏–µ...")
        # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ—à–µ–Ω–∏—è —É—Ä–∞–≤–Ω–µ–Ω–∏–π
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π")


# –§—É–Ω–∫—Ü–∏–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π (–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª formulas/algebra_formulas.py)
def calculate_percentages(text: str) -> str:
    """–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤"""
    # –õ–æ–≥–∏–∫–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
    return "–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤: ..."


def solve_equation(equation: str) -> str:
    """–†–µ—à–µ–Ω–∏–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–π"""
    # –õ–æ–≥–∏–∫–∞ —Ä–µ—à–µ–Ω–∏—è —É—Ä–∞–≤–Ω–µ–Ω–∏–π
    return "–†–µ—à–µ–Ω–∏–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è: ..."